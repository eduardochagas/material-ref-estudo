#############################################
#
# Como usar o pyinstaller
#
#############################################

#######################
# instalação...
#######################

    digite no terminal: pip3 install pyinstaller
    
    	OBS: comandos básicos do pip para controle dos pacotes instalados:
    		
    		pip3 install nomeDoPacote -> instala um pacote python
    		pip3 list -> lista todos os pacotes instalados com o pip
    		pip3 uninstall nomeDoPacote -> desinstala um pacote python
    		pip3 -h -> exibe as opções que podem ser usadas no pip.
    		 


##########################
# criando o executavel...
##########################

    Após instalar o pyinstaller, vá ate a pasta que contêm o arquivo principal que vc 
    quer transformar em executavel, clique com o botão direito do mouse e abra o terminal
    a partir dessa pasta. Em seguida, digite na tela do terminal:
    
    	pyinstaller -F nomeDoArquvioPrincipal.py
    	
    o comando acima vai criar um arquivo chamado: nomeDoArquivoPrincipal.spec
    
    dentro do arquivo: nomeDoArquivoPrincipal.spec, vamos inserir as linhas do arquivo .spec: 


######################################################
#
# conteúdo padrão para o arquivo .spec
#
######################################################


block_cipher = None

#######################################
# aqui em added_files, vc insere:
#   o caminho do arquivo no INDICE 0 da tupla
#   e o nome da pasta que contêm os arquivos no INDICE 1 da tupla

added_files = [
         ( 'src/README.txt', '.' ),
         ( '/mygame/sfx/*.mp3', 'sfx' )
         ]

#    OBS: no INDICE 0 da tupla, vc pode usar a mesma forma que o
#    linux faz para ler múltiplos arquivos, usando: *.extensão, por exemplo:
#
#	('img/*.png', 'img')
#	('sound/*.wav', 'sound')	
#
#    com isso o arquivo pyinstaller consegue ler vários arquivos, 
# 

a = Analysis(['minimal.py'],
     pathex=['/Developer/PItests/minimal'],
     binaries=None,
     datas=added_files, # o added_files é inserido aqui
     hiddenimports=[],
     hookspath=None,
     runtime_hooks=None,
     excludes=None,
     cipher=block_cipher)
pyz = PYZ(a.pure, a.zipped_data,
     cipher=block_cipher)
exe = EXE(pyz,... )
coll = COLLECT(...)


############################################################
#
#  Depois de ter configurado o arquivo .spec....
#
############################################################

    após configurado o arquivo .spec, insira esse comando no terminal: pyinstaller --noconsole --onefile nomeDoArquivoPrincipal.spec










